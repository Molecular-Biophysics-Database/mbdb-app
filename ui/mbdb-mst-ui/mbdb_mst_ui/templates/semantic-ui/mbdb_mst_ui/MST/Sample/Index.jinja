{# def gp, sample #}

{% from "mbdb_mst_ui/Common/renderers.jinja" import no_value, render_if %}
{% from "mbdb_mst_ui/MBDB/renderers.jinja" import measured_value %}
{% from "mbdb_mst_ui/MST/Sample/renderers.jinja" import constituent_info %}

{% set chemical_environment = (gp.chemical_information.chemical_environments | selectattr("id", "equalto", sample.chemical_environment.id) | list)[0] %}
{% set ionic_strength = chemical_environment | maybe_get('ionic_strength') %}
{% set temperature = gp | maybe_get('gp.physical_conditions_at_sample_handling.temperature') %}

<div>
  <div>
    <div class="mbdbv-voffset">
      <h5 class="mbdbv-header">Buffer (<Common.Emph>{{ chemical_environment.name }}</Common.Emph>)</h5>
      <div class="mbdbv-hoffset">
        <MBDB.NameValue.List>
          <MBDB.NameValue.Inset>
            <h5 class="mbdbv-header">Constituents</h5>
            <div class="mddbv-block">
              <MBDB.List.Itemization
                items={chemical_environment.constituents}
                renderer={constituent_info}
              />
            </div>
          </MBDB.NameValue.Inset>
          <MBDB.NameValue.Item name="pH">
            <MBDB.MeasuredValue value={chemical_environment.pH} />
          </MBDB.NameValue.Item>
          <MBDB.NameValue.Item name="Temperature">
            {{ render_if(
              temperature is defined,
              measured_value,
              no_value(),
              value=temperature)
            }}
          </MBDB.NameValue.Item>
          <MBDB.NameValue.Item name="Ionic strength">
            {{ render_if(
              ionic_strength is defined,
              measured_value,
              no_value(),
              value=ionic_strength)
            }}
          </MBDB.NameValue.Item>
        </MBDB.NameValue.List>
      </div>
    </div>

    <div class="mbdbv-voffset">
      <MBDB.NameValue.Single name="Measured in">
        {{ sample.container }}
      </MBDB.NameValue.Single>
    </div>
  </div>
</div>
