{% import "mbdb_mst_ui/MBDB/NameValue/Index.jinja" as nv %}
{% from   "mbdb_mst_ui/MST/ExcitationLed.jinja" import excitation_led %}
{% from   "mbdb_mst_ui/MST/Sample/Index.jinja" import sample %}

{%- macro measurements(gp, msp) %}
  {# TODO: In the future we might want to filter what derived parameters to display
  {% set kd_derived_parameters = gp.derived_parameters | selectattr("type", "equalto", "Constant of dissociation (K_D)") %}
  #}

  <div>
    <div class="mbdbv-block mbdbv-framed">
      <div class="mbdbv-header">Experimental setup</div>
      {{ nv.list_open() }}
        {{ nv.item("Experiment type", msp.experiment_type) }}
        {{ nv.item("Signal type", msp.signal_type) }}
        {{ nv.item("Excitation LED", excitation_led(msp.excitation_led_power, msp.excitation_led_color)) }}
        {{ nv.item("Laser power", msp.ir_mst_laser_power) }}
      {{ nv.list_close() }}
    </div>

    {% for measurement in msp.measurements %}
      <div class="mbdbv-block mbdbv-framed">
        <div class="mbdbv-header">Measurement {{ loop.index }}</div>

        {{ nv.list_open() }}
          {{ nv.item("Name", measurement.name) }}
          {{ nv.item("Position", measurement.position) }}

          {{ nv.inset_open() }}
            {{ sample(gp, measurement.sample) }}
          {{ nv.inset_close() }}

          {{ nv.spacer() }}
        {{ nv.list_close() }}
      </div>
    {% endfor %}
  </div>
{%- endmacro %}
